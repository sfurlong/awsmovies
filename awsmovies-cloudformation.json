{
    "Outputs": {
        "AWSEBLoadBalancerURL": {
            "Description": "The ElasticBeanstalk ELB URL of the website",
            "Value": {
                "Fn::Join": [
                    "", [
                        "http:\/\/",
                        {
                            "Fn::GetAtt": [
                                "AWSEBLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "LogPublicationControl": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "If true customer service logs will be published to S3.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "must be Boolean.",
            "Default": "false"
        },
        "InstancePort": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Listen Port",
            "Default": "80"
        },
        "XRayEnabled": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Enables AWS X-Ray for your environment.",
            "Default": "false"
        },
        "AWSEBEnvironmentId": {
            "NoEcho": "true",
            "Type": "String"
        },
        "HooksPkgUrl": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "URL to hooks package",
            "Default": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/hooks.tar.gz"
        },
        "AWSEBEnvironmentName": {
            "NoEcho": "true",
            "Type": "String"
        },
        "AWSEBReferrerId": {
            "NoEcho": "true",
            "Type": "String",
            "Default": ""
        },
        "AppSource": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Application Source",
            "Default": "http:\/\/s3.amazonaws.com\/elasticbeanstalk-samples-us-east-1\/nodejs-sample-v2.zip"
        },
        "ProxyServer": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Specifies which proxy server to be used for client connections. Static file mappings and gzip compression will not take effect if the proxy server is set to \"none\".",
            "AllowedValues": [
                "apache",
                "nginx",
                "none"
            ],
            "Default": "nginx"
        },
        "NodeVersion": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Version of Node.js.",
            "AllowedValues": [
                "4.6.1",
                "4.8.0",
                "5.12.0",
                "6.9.1",
                "6.10.0",
                "7.6.0"
            ],
            "Default": "6.10.0"
        },
        "NodeStaticFiles": {
            "NoEcho": "true",
            "Type": "CommaDelimitedList",
            "Description": "The directory to serve as static content.",
            "Default": ""
        },
        "EnvironmentVariables": {
            "NoEcho": "true",
            "Type": "CommaDelimitedList",
            "Description": "Program environment variables.",
            "Default": ""
        },
        "AWSEBAgentId": {
            "NoEcho": "true",
            "Type": "String",
            "Default": ""
        },
        "NodeEnableGzip": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Specifies if gzip compression is enabled.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true"
        },
        "InstanceType": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "WebServer EC2 instance type",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "t1.micro",
                "t2.nano",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "c1.medium",
                "c1.xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "cc1.4xlarge",
                "cc2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "p2.xlarge",
                "p2.8xlarge",
                "p2.16xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "f1.2xlarge",
                "f1.16xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "t1.micro"
        },
        "AWSEBEnvironmentBucket": {
            "NoEcho": "true",
            "Type": "String"
        },
        "ServerPort": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Server Port",
            "Default": "8080"
        },
        "NodeCommand": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Command to start the Node.js application. If an empty string is specified, app.js is used, then server.js, then \"npm start\" in that order.",
            "Default": ""
        }
    },
    "Resources": {
        "AWSEBSecurityGroupSSHIngress": {
            "Properties": {
                "CidrIp": "0.0.0.0\/0",
                "GroupName": {
                    "Ref": "AWSEBSecurityGroup"
                },
                "FromPort": "22",
                "ToPort": "22",
                "IpProtocol": "tcp"
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "AWSEBAutoScalingLaunchConfiguration": {
            "Properties": {
                "KeyName": "sfurlong-bpm11g",
                "SecurityGroups": [{
                    "Ref": "AWSEBSecurityGroup"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "Content-Type: multipart\/mixed; boundary=\"===============5189065377222898407==\"",
                                "\n",
                                "MIME-Version: 1.0",
                                "\n",
                                "",
                                "\n",
                                "--===============5189065377222898407==",
                                "\n",
                                "Content-Type: text\/cloud-config; charset=\"us-ascii\"",
                                "\n",
                                "MIME-Version: 1.0",
                                "\n",
                                "Content-Transfer-Encoding: 7bit",
                                "\n",
                                "Content-Disposition: attachment; filename=\"cloud-config.txt\"",
                                "\n",
                                "",
                                "\n",
                                "#cloud-config",
                                "\n",
                                "repo_upgrade: none",
                                "\n",
                                "repo_releasever: ",
                                {
                                    "Fn::FindInMap": [
                                        "ContainerMeta",
                                        "AMIMeta",
                                        "RepoReleaseVersion"
                                    ]
                                },
                                "\n",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "CloudConfigOptions"
                                    ]
                                },
                                "\n",
                                "",
                                "\n",
                                "--===============5189065377222898407==",
                                "\n",
                                "Content-Type: text\/x-shellscript; charset=\"us-ascii\"",
                                "\n",
                                "MIME-Version: 1.0",
                                "\n",
                                "Content-Transfer-Encoding: 7bit",
                                "\n",
                                "Content-Disposition: attachment; filename=\"user-data.txt\"",
                                "\n\n",
                                "#!\/bin\/bash",
                                "\n",
                                "exec > >(tee -a \/var\/log\/eb-cfn-init.log|logger -t [eb-cfn-init] -s 2>\/dev\/console) 2>&1",
                                "\n",
                                "echo [`date -u +\"%Y-%m-%dT%H:%M:%SZ\"`] Started EB User Data",
                                "\n",
                                "set -x",
                                "\n",
                                "\n\n",
                                "function sleep_delay ",
                                "\n",
                                "{",
                                "\n",
                                "  if (( $SLEEP_TIME < $SLEEP_TIME_MAX )); then ",
                                "\n",
                                "    echo Sleeping $SLEEP_TIME",
                                "\n",
                                "    sleep $SLEEP_TIME  ",
                                "\n",
                                "    SLEEP_TIME=$(($SLEEP_TIME * 2)) ",
                                "\n",
                                "  else ",
                                "\n",
                                "    echo Sleeping $SLEEP_TIME_MAX  ",
                                "\n",
                                "    sleep $SLEEP_TIME_MAX  ",
                                "\n",
                                "  fi",
                                "\n",
                                "}",
                                "\n\n",
                                "# Executing bootstrap script",
                                "\n",
                                "SLEEP_TIME=10",
                                "\n",
                                "SLEEP_TIME_MAX=3600",
                                "\n",
                                "while true; do ",
                                "\n",
                                "  curl ",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "UserDataScript"
                                    ]
                                },
                                " > \/tmp\/ebbootstrap.sh ",
                                "\n",
                                "  RESULT=$?",
                                "\n",
                                "  if [[ \"$RESULT\" -ne 0 ]]; then ",
                                "\n",
                                "    sleep_delay ",
                                "\n",
                                "  else",
                                "\n",
                                "    \/bin\/bash \/tmp\/ebbootstrap.sh ",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "rpms"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "tarballs"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "ebgems"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Ref": "AWSEBInstanceLaunchWaitHandle"
                                },
                                "'",
                                "    '",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "'",
                                "    '",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "guid"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "AWSEBHealthdGroupId"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "AWSEBHealthdEndpoint"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "ProxyServer"
                                    ]
                                },
                                "'",
                                "    '",
                                {
                                    "Fn::FindInMap": [
                                        "AWSEBOptions",
                                        "options",
                                        "HealthdProxyLogLocation"
                                    ]
                                },
                                "'",
                                "    && ",
                                "\n",
                                "    exit 0  ",
                                "\n",
                                "  fi ",
                                "\n",
                                "done",
                                "\n\n",
                                "--===============5189065377222898407==-- "
                            ]
                        ]
                    }
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSEBAWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSEBAWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": "aws-elasticbeanstalk-ec2-role",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "InstanceMonitoring": false
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "AWSEBLoadBalancer": {
            "Properties": {
                "Listeners": [{
                    "InstancePort": {
                        "Ref": "InstancePort"
                    },
                    "LoadBalancerPort": "80",
                    "Protocol": "HTTP"
                }],
                "CrossZone": true,
                "ConnectionDrainingPolicy": {
                    "Timeout": 20,
                    "Enabled": true
                },
                "Policies": [

                ],
                "AvailabilityZones": [
                    "us-east-1e",
                    "us-east-1b",
                    "us-east-1c"
                ],
                "HealthCheck": {
                    "Target": {
                        "Fn::Join": [
                            "", [
                                "TCP",
                                ":",
                                {
                                    "Ref": "InstancePort"
                                }
                            ]
                        ]
                    },
                    "UnhealthyThreshold": "5",
                    "Timeout": "5",
                    "HealthyThreshold": "3",
                    "Interval": "10"
                }
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "AWSEBSecurityGroup": {
            "Properties": {
                "GroupDescription": "SecurityGroup for ElasticBeanstalk environment.",
                "SecurityGroupIngress": [{
                    "FromPort": {
                        "Ref": "InstancePort"
                    },
                    "SourceSecurityGroupName": {
                        "Fn::GetAtt": [
                            "AWSEBLoadBalancer",
                            "SourceSecurityGroup.GroupName"
                        ]
                    },
                    "ToPort": {
                        "Ref": "InstancePort"
                    },
                    "SourceSecurityGroupOwnerId": {
                        "Fn::GetAtt": [
                            "AWSEBLoadBalancer",
                            "SourceSecurityGroup.OwnerAlias"
                        ]
                    },
                    "IpProtocol": "tcp"
                }]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "AWSEBAutoScalingScaleDownPolicy": {
            "Properties": {
                "ScalingAdjustment": "-1",
                "AutoScalingGroupName": {
                    "Ref": "AWSEBAutoScalingGroup"
                },
                "AdjustmentType": "ChangeInCapacity"
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "AWSEBInstanceLaunchWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "AWSEBAutoScalingGroup": {
            "Metadata": {
                "ForcingMetadataUpdate": "Changing something in the metadata will force re-compuation",
                "AWS::ElasticBeanstalk::Ext": {
                    "_AppSourceUrlFileContent": {
                        "url": {
                            "Ref": "AppSource"
                        }
                    },
                    "_TriggersConfig": {
                        "configDeploy": {
                            "_Command": "CMD-ConfigDeploy",
                            "_WatchGroups": [
                                "_TriggerConfigDeployment"
                            ]
                        },
                        "applicationDeploy": {
                            "_Command": "CMD-AppDeploy",
                            "_WatchGroups": [
                                "_TriggerAppDeployment"
                            ]
                        }
                    },
                    "_ParameterTriggers": {
                        "_TriggerConfigDeployment": [
                            "EnvironmentVariables",
                            "InstancePort",
                            "LogPublicationControl",
                            "InstancePort",
                            "ServerPort",
                            "NodeVersion",
                            "ProxyServer",
                            "NodeStaticFiles",
                            "EnvironmentVariables",
                            "NodeCommand",
                            "XRayEnabled"
                        ],
                        "_TriggerAppDeployment": [
                            "AppSource"
                        ]
                    },
                    "_ContainerConfigFileContent": {
                        "container": {
                            "config_staging_dir": "\/tmp\/deployment\/config",
                            "nodejs_log_dir": "\/var\/log\/nodejs",
                            "log_group_name_prefix": "\/aws\/elasticbeanstalk",
                            "app_base_dir": "\/var\/app",
                            "app_user_home": "\/tmp",
                            "app_deploy_dir": "\/var\/app\/current",
                            "eb_bundles_url": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/",
                            "app_user": "nodejs",
                            "nodejs_download_url": {
                                "Fn::FindInMap": [
                                    "AWSEBOptions",
                                    "options",
                                    "NodeDownloadUrl"
                                ]
                            },
                            "nodejs_proxy_port": "8081",
                            "server_port": {
                                "Ref": "ServerPort"
                            },
                            "app_staging_dir": "\/tmp\/deployment\/application",
                            "nodejs_standalone_port": "8080",
                            "instance_port": {
                                "Ref": "InstancePort"
                            },
                            "default_log_list": [
                                "\/var\/log\/nodejs\/nodejs.log",
                                "\/var\/log\/nginx\/error.log",
                                "\/var\/log\/nginx\/access.log",
                                "\/var\/log\/httpd\/error.log",
                                "\/var\/log\/httpd\/access.log"
                            ],
                            "xray_enabled": {
                                "Ref": "XRayEnabled"
                            },
                            "nodejs_install_dir": "\/opt\/elasticbeanstalk\/node-install",
                            "xray_rpm_location": {
                                "Fn::Join": [
                                    "", [
                                        "https:\/\/aws-xray.",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ".s3.amazonaws.com\/daemon\/",
                                        {
                                            "Fn::FindInMap": [
                                                "XRay",
                                                "Configuration",
                                                "Version"
                                            ]
                                        },
                                        "\/linux\/aws-xray-daemon.rpm"
                                    ]
                                ]
                            },
                            "source_bundle": "\/opt\/elasticbeanstalk\/deploy\/appsource\/source_bundle",
                            "common_log_list": [
                                "\/var\/log\/eb-activity.log"
                            ],
                            "environment_name": {
                                "Ref": "AWSEBEnvironmentName"
                            }
                        },
                        "optionsettings": {
                            "aws:elasticbeanstalk:container:nodejs": {
                                "NodeVersion": {
                                    "Ref": "NodeVersion"
                                },
                                "GzipCompression": {
                                    "Ref": "NodeEnableGzip"
                                },
                                "NodeCommand": {
                                    "Ref": "NodeCommand"
                                },
                                "ProxyServer": {
                                    "Ref": "ProxyServer"
                                }
                            },
                            "aws:elasticbeanstalk:application:environment": {
                                "Ref": "EnvironmentVariables"
                            },
                            "aws:elasticbeanstalk:hostmanager": {
                                "LogPublicationControl": {
                                    "Ref": "LogPublicationControl"
                                }
                            },
                            "aws:elasticbeanstalk:container:nodejs:staticfiles": {
                                "NodeStaticFiles": {
                                    "Ref": "NodeStaticFiles"
                                }
                            }
                        },
                        "system": {
                            "LogPublicationControl": {
                                "Ref": "LogPublicationControl"
                            },
                            "AWSEBAgentId": {
                                "Ref": "AWSEBAgentId"
                            },
                            "AWSEBReferrerId": {
                                "Ref": "AWSEBReferrerId"
                            }
                        },
                        "commands": {
                            "CMD-TailLogs": {
                                "persistent_configuration": true,
                                "stages": [{
                                    "name": "TailLogs",
                                    "actions": [{
                                        "name": "TailLogs",
                                        "type": "sh",
                                        "value": "tailLogs.py --concatenate --conf-path '\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/*' --location-prefix 'resources\/environments\/logs\/tail\/'"
                                    }]
                                }]
                            },
                            "CMD-PreInit": {
                                "refresh_manifest": true,
                                "stages": [{
                                    "name": "PreInitStage0",
                                    "actions": [{
                                            "name": "InfraWriteConfig",
                                            "type": "infra",
                                            "value": "infra-write_runtime_config.rb"
                                        },
                                        {
                                            "name": "DownloadSourceBundle",
                                            "type": "infra",
                                            "value": "\/opt\/elasticbeanstalk\/bin\/download-source-bundle"
                                        },
                                        {
                                            "name": "PreInitHook",
                                            "type": "hook",
                                            "value": "preinit"
                                        }
                                    ]
                                }]
                            },
                            "CMD-Startup": {
                                "stages": [{
                                        "name": "StartupStage0",
                                        "actions": [{
                                                "name": "HealthdLogRotation",
                                                "type": "infra",
                                                "value": "infra-healthd_log_rotation.rb"
                                            },
                                            {
                                                "name": "HealthdHTTPDLogging",
                                                "type": "infra",
                                                "value": "infra-healthd_httpd_logging.rb"
                                            },
                                            {
                                                "name": "HealthdNginxLogging",
                                                "type": "infra",
                                                "value": "infra-healthd_nginx_logging.rb"
                                            },
                                            {
                                                "name": "EbExtensionPreBuild",
                                                "type": "infra",
                                                "value": "infra-embedded_prebuild.rb"
                                            },
                                            {
                                                "name": "AppDeployPreHook",
                                                "type": "hook",
                                                "value": "appdeploy\/pre"
                                            },
                                            {
                                                "name": "EbExtensionPostBuild",
                                                "type": "infra",
                                                "value": "infra-embedded_postbuild.rb"
                                            },
                                            {
                                                "name": "InfraCleanEbExtension",
                                                "type": "infra",
                                                "value": "infra-clean_ebextensions_dir.rb"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "StartupStage1",
                                        "actions": [{
                                                "name": "AppDeployEnactHook",
                                                "type": "hook",
                                                "value": "appdeploy\/enact"
                                            },
                                            {
                                                "name": "AppDeployPostHook",
                                                "type": "hook",
                                                "value": "appdeploy\/post"
                                            },
                                            {
                                                "name": "PostInitHook",
                                                "type": "hook",
                                                "value": "postinit"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "CMD-PublishLogs": {
                                "persistent_configuration": true,
                                "stages": [{
                                    "name": "PublishLogs",
                                    "actions": [{
                                        "name": "PublishLogs",
                                        "type": "sh",
                                        "value": "publishLogs.py --de-dupe --conf-path '\/opt\/elasticbeanstalk\/tasks\/publishlogs.d\/*' --location-prefix 'resources\/environments\/logs\/publish\/' --num-concurrent 2"
                                    }]
                                }]
                            },
                            "CMD-ImmutableDeploymentFlip": {
                                "persistent_configuration": true,
                                "stages": [{
                                    "name": "ImmutableDeploymentFlip",
                                    "actions": [{
                                        "name": "FlipCommandRegistration",
                                        "type": "infra",
                                        "value": "infra-reregister-cfn-hup.rb"
                                    }]
                                }]
                            },
                            "CMD-AppDeploy": {
                                "refresh_manifest": true,
                                "stages": [{
                                        "name": "AppDeployStage0",
                                        "actions": [{
                                                "name": "InfraWriteConfig",
                                                "type": "infra",
                                                "value": "infra-write_runtime_config.rb"
                                            },
                                            {
                                                "name": "DownloadSourceBundle",
                                                "type": "infra",
                                                "value": "\/opt\/elasticbeanstalk\/bin\/download-source-bundle"
                                            },
                                            {
                                                "name": "EbExtensionPreBuild",
                                                "type": "infra",
                                                "value": "infra-embedded_prebuild.rb"
                                            },
                                            {
                                                "name": "AppDeployPreHook",
                                                "type": "hook",
                                                "value": "appdeploy\/pre"
                                            },
                                            {
                                                "name": "EbExtensionPostBuild",
                                                "type": "infra",
                                                "value": "infra-embedded_postbuild.rb"
                                            },
                                            {
                                                "name": "InfraCleanEbextension",
                                                "type": "infra",
                                                "value": "infra-clean_ebextensions_dir.rb"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "AppDeployStage1",
                                        "actions": [{
                                                "name": "AppDeployEnactHook",
                                                "type": "hook",
                                                "value": "appdeploy\/enact"
                                            },
                                            {
                                                "name": "AppDeployPostHook",
                                                "type": "hook",
                                                "value": "appdeploy\/post"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "CMD-BundleLogs": {
                                "persistent_configuration": true,
                                "stages": [{
                                    "name": "BundleLogs",
                                    "actions": [{
                                        "name": "BundleLogs",
                                        "type": "sh",
                                        "value": "bundleLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/*' --location-prefix 'resources\/environments\/logs\/bundle\/'"
                                    }]
                                }]
                            },
                            "CMD-SelfStartup": {
                                "stages": [{
                                        "name": "StartupStage0",
                                        "actions": [{
                                                "name": "HealthdLogRotation",
                                                "type": "infra",
                                                "value": "infra-healthd_log_rotation.rb"
                                            },
                                            {
                                                "name": "HealthdHTTPDLogging",
                                                "type": "infra",
                                                "value": "infra-healthd_httpd_logging.rb"
                                            },
                                            {
                                                "name": "HealthdNginxLogging",
                                                "type": "infra",
                                                "value": "infra-healthd_nginx_logging.rb"
                                            },
                                            {
                                                "name": "EbExtensionPreBuild",
                                                "type": "infra",
                                                "value": "infra-embedded_prebuild.rb"
                                            },
                                            {
                                                "name": "AppDeployPreHook",
                                                "type": "hook",
                                                "value": "appdeploy\/pre"
                                            },
                                            {
                                                "name": "EbExtensionPostBuild",
                                                "type": "infra",
                                                "value": "infra-embedded_postbuild.rb"
                                            },
                                            {
                                                "name": "InfraCleanEbextension",
                                                "type": "infra",
                                                "value": "infra-clean_ebextensions_dir.rb"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "StartupStage1",
                                        "actions": [{
                                                "name": "AppDeployEnactHook",
                                                "type": "hook",
                                                "value": "appdeploy\/enact"
                                            },
                                            {
                                                "name": "AppDeployPostHook",
                                                "type": "hook",
                                                "value": "appdeploy\/post"
                                            },
                                            {
                                                "name": "PostInitHook",
                                                "type": "hook",
                                                "value": "postinit"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "CMD-SystemTailLogs": {
                                "persistent_configuration": true,
                                "stages": [{
                                    "name": "SystemTailLogs",
                                    "actions": [{
                                        "name": "SystemTailLogs",
                                        "type": "sh",
                                        "value": "tailLogs.py --concatenate --conf-path '\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/*' --location-prefix 'resources\/environments\/logs\/systemtail\/'"
                                    }]
                                }]
                            },
                            "CMD-RestartAppServer": {
                                "stages": [{
                                        "name": "RestartAppServerStage0",
                                        "actions": [{
                                                "name": "InfraWriteConfig",
                                                "type": "infra",
                                                "value": "infra-write_runtime_config.rb"
                                            },
                                            {
                                                "name": "RestartAppServerPreHook",
                                                "type": "hook",
                                                "value": "restartappserver\/pre"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "RestartAppServerStage1",
                                        "actions": [{
                                                "name": "RestartAppServerEnactHook",
                                                "type": "hook",
                                                "value": "restartappserver\/enact"
                                            },
                                            {
                                                "name": "RestartAppServerPostHook",
                                                "type": "hook",
                                                "value": "restartappserver\/post"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "CMD-ConfigDeploy": {
                                "refresh_manifest": true,
                                "stages": [{
                                        "name": "ConfigDeployStage0",
                                        "actions": [{
                                                "name": "InfraWriteConfig",
                                                "type": "infra",
                                                "value": "infra-write_runtime_config.rb"
                                            },
                                            {
                                                "name": "ConfigDeployPreHook",
                                                "type": "hook",
                                                "value": "configdeploy\/pre"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "ConfigDeployStage1",
                                        "actions": [{
                                                "name": "ConfigDeployEnactHook",
                                                "type": "hook",
                                                "value": "configdeploy\/enact"
                                            },
                                            {
                                                "name": "ConfigDeployPostHook",
                                                "type": "hook",
                                                "value": "configdeploy\/post"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "_LaunchS3URL": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-us-east-1-256891943969\/resources\/environments\/e-bvsmjaz8xv\/awsmovies_LaunchFile",
                    "_API": {
                        "_Commands": {
                            "CMD-TailLogs": {
                                "_Stages": {
                                    "01_enact": [
                                        "InfoTask-TailLogs"
                                    ]
                                }
                            },
                            "CMD-Startup": {
                                "_RunStaged": "true",
                                "_Stages": {
                                    "01_pre": [

                                    ],
                                    "02_enact": [

                                    ]
                                }
                            },
                            "CMD-AppDeploy": {
                                "_RunStaged": "true",
                                "_Stages": {
                                    "01_pre": [

                                    ],
                                    "02_enact": [

                                    ]
                                }
                            },
                            "CMD-BundleLogs": {
                                "_Stages": {
                                    "01_enact": [
                                        "InfoTask-BundleLogs"
                                    ]
                                }
                            },
                            "CMD-SystemTailLogs": {
                                "_Stages": {
                                    "01_enact": [
                                        "InfoTask-SystemTailLogs"
                                    ]
                                }
                            },
                            "CMD-PatchInstance": {
                                "_Stages": {
                                    "01_enact": [
                                        "_Infra-PatchInstance"
                                    ]
                                }
                            },
                            "CMD-RestartAppServer": {
                                "_RunStaged": "false",
                                "_Stages": {
                                    "01_enact": [

                                    ],
                                    "02_enact": [

                                    ]
                                }
                            },
                            "CMD-ConfigDeploy": {
                                "_RunStaged": "true",
                                "_Stages": {
                                    "01_pre": [

                                    ],
                                    "02_enact": [

                                    ]
                                }
                            }
                        }
                    },
                    "AvailabilityZoneCount": "Any",
                    "InstanceSignalURL": {
                        "Ref": "AWSEBInstanceLaunchWaitHandle"
                    },
                    "_EnvironmentInfoTaskMapping": "EnvironmentInfoTasks"
                },
                "AWS::CloudFormation::Init": {
                    "Infra-WriteTailLogsConf": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/eb-activity.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/eb-commandprocessor.log",
                                            "\/var\/log\/eb-activity.log",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/eb-version-deployment.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/eb-version-deployment.log",
                                            ""
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Infra-WriteBundleLogsConf": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/eb-system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/eb-cfn-init*",
                                            "\/var\/log\/eb-tools*",
                                            "\/var\/log\/eb-publish-logs*",
                                            "\/var\/log\/eb-commandprocessor*",
                                            "\/var\/log\/eb-activity*",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/cfn-system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/cfn-hup*",
                                            "\/var\/log\/cfn-init*",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/eb-version-deployment.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/eb-version-deployment.log",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/cloud-init-system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/cloud-init*",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/cron",
                                            "\/var\/log\/messages",
                                            "\/var\/log\/yum.log",
                                            ""
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "InfoTask-TailLogs": {
                        "commands": {
                            "taillogs": {
                                "command": {
                                    "Fn::Join": [
                                        "", [
                                            "tailLogs.py --concatenate --conf-path '\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/*' --location-prefix ",
                                            {
                                                "Fn::FindInMap": [
                                                    "EnvironmentInfoTasks",
                                                    "tail",
                                                    "LocationPrefix"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Infra-WriteLeaderTestScript": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/bin\/leader-test.sh": {
                                "mode": "000755",
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "#!\/bin\/bash",
                                            "\n",
                                            "if [[ \"$EB_IS_COMMAND_LEADER\" == \"true\" ]]; then ",
                                            "\n",
                                            "  exit 0 ",
                                            "\n",
                                            "else  ",
                                            "\n",
                                            "  exit 1 ",
                                            "\n",
                                            "fi ",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "InfoTask-BundleLogs": {
                        "commands": {
                            "bundlelogs": {
                                "command": {
                                    "Fn::Join": [
                                        "", [
                                            "bundleLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/*' --location-prefix ",
                                            {
                                                "Fn::FindInMap": [
                                                    "EnvironmentInfoTasks",
                                                    "bundle",
                                                    "LocationPrefix"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "AWSEBBaseConfig": {
                        "files": {
                            "\/etc\/cfn\/cfn-hup.conf": {
                                "mode": "000400",
                                "owner": "root",
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[main]",
                                            "\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "verbose=true\n",
                                            "multi-threaded=false\n"
                                        ]
                                    ]
                                },
                                "group": "root"
                            },
                            "\/etc\/elasticbeanstalk\/.aws-eb-stack.properties": {
                                "mode": "000440",
                                "owner": "root",
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "environment_id=",
                                            {
                                                "Ref": "AWSEBEnvironmentId"
                                            },
                                            "\n",
                                            "environment_bucket=",
                                            {
                                                "Ref": "AWSEBEnvironmentBucket"
                                            },
                                            "\n",
                                            "stack_name=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "resource=",
                                            "AWSEBAutoScalingGroup",
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n\n"
                                        ]
                                    ]
                                },
                                "group": "root"
                            },
                            "\/etc\/init\/cfn-hup.conf": {
                                "mode": "000400",
                                "owner": "root",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "stop on runlevel [016]",
                                            "respawn",
                                            "script",
                                            "  \/opt\/aws\/bin\/cfn-hup",
                                            "end script"
                                        ]
                                    ]
                                },
                                "group": "root"
                            },
                            "\/etc\/cfn\/hooks.d\/aws-eb-command-handler.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[aws-eb-command-handler]",
                                            "\n",
                                            "triggers=on.command",
                                            "\n",
                                            "path=ElasticBeanstalkCommand-",
                                            "AWSEBAutoScalingGroup",
                                            "\n",
                                            "action=\/opt\/elasticbeanstalk\/bin\/command-processor",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "clearbackupfiles": {
                                "command": "rm -f \/etc\/cfn\/hooks.d\/*.bak"
                            }
                        }
                    },
                    "Hook-PreAppDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "echo place holder"
                            }
                        }
                    },
                    "InfoTask-SystemTailLogs": {
                        "commands": {
                            "systemtaillogs": {
                                "command": {
                                    "Fn::Join": [
                                        "", [
                                            "tailLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/*' --location-prefix ",
                                            {
                                                "Fn::FindInMap": [
                                                    "EnvironmentInfoTasks",
                                                    "systemtail",
                                                    "LocationPrefix"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "AWSEBMessageOfTheDay": {
                        "files": {
                            "\/tmp\/10eb-banner": {
                                "mode": "000755",
                                "owner": "root",
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "cat << EOF",
                                            "\n",
                                            " _____ _           _   _      ____                       _        _ _",
                                            "\n",
                                            "| ____| | __ _ ___| |_(_) ___| __ )  ___  __ _ _ __  ___| |_ __ _| | | __",
                                            "\n",
                                            "|  _| | |\/ _\\` \/ __| __| |\/ __|  _ \\ \/ _ \\\/ _\\` | '_ \\\/ __| __\/ _\\` | | |\/ \/",
                                            "\n",
                                            "| |___| | (_| \\__ \\ |_| | (__| |_) |  __\/ (_| | | | \\__ \\ || (_| | |   <",
                                            "\n",
                                            "|_____|_|\\__,_|___\/\\__|_|\\___|____\/ \\___|\\__,_|_| |_|___\/\\__\\__,_|_|_|\\_\\\\",
                                            "\n",
                                            "                                       Amazon Linux AMI",
                                            "\n",
                                            "\n",
                                            "This EC2 instance is managed by AWS Elastic Beanstalk. Changes made via SSH ",
                                            "\n",
                                            "WILL BE LOST if the instance is replaced by auto-scaling. For more information ",
                                            "\n",
                                            "on customizing your Elastic Beanstalk environment, see our documentation here: ",
                                            "\n",
                                            "http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/customize-containers-ec2.html",
                                            "\n",
                                            "EOF",
                                            "\n"
                                        ]
                                    ]
                                },
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01clearoriginal": {
                                "command": "rm -f \/etc\/update-motd.d\/*"
                            },
                            "02createbanner": {
                                "command": "mv \/tmp\/10eb-banner \/etc\/update-motd.d\/10eb-banner"
                            },
                            "03updatebanner": {
                                "command": "\/usr\/sbin\/update-motd"
                            }
                        }
                    },
                    "Infra-WriteSystemTailLogsConf": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/eb-system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/eb-cfn-init.log",
                                            "\/var\/log\/eb-tools.log",
                                            "\/var\/log\/eb-publish-logs.log",
                                            "\/var\/log\/eb-commandprocessor.log",
                                            "\/var\/log\/eb-activity.log",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/eb-version-deployment.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/eb-version-deployment.log",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/cfn-system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/cfn-hup.log",
                                            "\/var\/log\/cfn-init.log",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/cron",
                                            "\/var\/log\/messages",
                                            "\/var\/log\/yum.log",
                                            ""
                                        ]
                                    ]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/cloud-init-system.conf": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "\n", [
                                            "\/var\/log\/cloud-init.log",
                                            ""
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Infra-PatchInstance": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/bin\/patch_instance": {
                                "mode": "000750",
                                "owner": "root",
                                "source": {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::FindInMap": [
                                                "AWSEBOptions",
                                                "options",
                                                "ebpatchscripturl"
                                            ]
                                        }
                                    ]
                                },
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01executepatch": {
                                "command": "\/opt\/elasticbeanstalk\/bin\/patch_instance"
                            }
                        }
                    },
                    "Infra-InstallContainerHooksPkg": {
                        "commands": {
                            "01download_container_hooks": {
                                "command": {
                                    "Fn::Join": [
                                        "", [
                                            "curl -sS --retry 3 '",
                                            {
                                                "Ref": "HooksPkgUrl"
                                            },
                                            "' -o \/tmp\/hooks.tar.gz"
                                        ]
                                    ]
                                }
                            },
                            "03cleanup": {
                                "command": "rm -f \/tmp\/hooks.tar.gz"
                            },
                            "00mkdir": {
                                "command": "mkdir -p \/opt\/elasticbeanstalk"
                            },
                            "02install_container_hooks": {
                                "command": "tar zxf \/tmp\/hooks.tar.gz --no-same-owner --no-same-permission -C \/opt\/elasticbeanstalk"
                            }
                        }
                    },
                    "Infra-WritePublishLogsCron": {
                        "files": {
                            "\/etc\/cron.d\/publishlogs": {
                                "mode": "000644",
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "SHELL=\/bin\/bash",
                                            "\n",
                                            "PATH=\/sbin:\/bin:\/usr\/sbin:\/usr\/bin",
                                            "\n",
                                            "MAILTO=\"\"",
                                            "\n",
                                            "HOME=\/",
                                            "\n",
                                            "10,30,50 * * * * root ",
                                            "publishLogs.py --de-dupe --conf-path '\/opt\/elasticbeanstalk\/tasks\/publishlogs.d\/*' --location-prefix ",
                                            {
                                                "Fn::FindInMap": [
                                                    "EnvironmentInfoTasks",
                                                    "publish",
                                                    "LocationPrefix"
                                                ]
                                            },
                                            " --num-concurrent 2",
                                            "\n",
                                            "05,25,45 * * * * root ",
                                            "clearStaleLogPublishingRecords.py",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Infra-WriteApplication1": {
                        "commands": {
                            "01mkdir": {
                                "command": "rm -rf \/opt\/elasticbeanstalk\/deploy\/appsource\/; mkdir -p \/opt\/elasticbeanstalk\/deploy\/appsource\/"
                            }
                        }
                    },
                    "configSets": {
                        "Infra-WriteTailLogsConf": [
                            "Infra-WriteTailLogsConf"
                        ],
                        "Infra-WriteBundleLogsConf": [
                            "Infra-WriteBundleLogsConf"
                        ],
                        "InfoTask-TailLogs": [
                            "InfoTask-TailLogs"
                        ],
                        "InfoTask-BundleLogs": [
                            "InfoTask-BundleLogs"
                        ],
                        "_OnInstanceReboot": [
                            "AWSEBBaseConfig"
                        ],
                        "_AppInstall": [
                            "Hook-PreAppDeploy"
                        ],
                        "Infra-EmbeddedPreBuild": [

                        ],
                        "Hook-PreAppDeploy": [
                            "Hook-PreAppDeploy"
                        ],
                        "InfoTask-SystemTailLogs": [
                            "InfoTask-SystemTailLogs"
                        ],
                        "Infra-WriteSystemTailLogsConf": [
                            "Infra-WriteSystemTailLogsConf"
                        ],
                        "_OnInstanceBoot": [
                            "AWSEBBaseConfig",
                            "AWSEBMessageOfTheDay",
                            "AWSEBULimitConfig",
                            "Infra-InstallContainerHooksPkg",
                            "Infra-WriteLeaderTestScript",
                            "Infra-WriteTailLogsConf",
                            "Infra-WriteSystemTailLogsConf",
                            "Infra-WriteBundleLogsConf",
                            "Infra-WritePublishLogsConf",
                            "Infra-WritePublishLogsCron"
                        ],
                        "Infra-EmbeddedPostBuild": [

                        ],
                        "Infra-WritePublishLogsCron": [
                            "Infra-WritePublishLogsCron"
                        ],
                        "Infra-WriteApplication1": [
                            "Infra-WriteApplication1"
                        ],
                        "Infra-WriteApplication2": [
                            "Infra-WriteApplication2"
                        ],
                        "Infra-WritePublishLogsConf": [
                            "Infra-WritePublishLogsConf"
                        ],
                        "_Infra-PatchInstance": [
                            "Infra-PatchInstance"
                        ]
                    },
                    "Infra-WriteApplication2": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/bin\/download_source_bundle": {
                                "owner": "root",
                                "mode": "000750",
                                "source": {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::FindInMap": [
                                                "AWSEBOptions",
                                                "options",
                                                "downloadSourceBundleScriptLocation"
                                            ]
                                        }
                                    ]
                                },
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01downloadVersion": {
                                "command": "\/opt\/elasticbeanstalk\/bin\/download_source_bundle"
                            },
                            "02deleteVersionDownloadScriptFile": {
                                "command": "rm \/opt\/elasticbeanstalk\/bin\/download_source_bundle"
                            }
                        }
                    },
                    "Infra-WritePublishLogsConf": {
                        "files": {

                        }
                    },
                    "AWSEBULimitConfig": {
                        "files": {
                            "\/etc\/elasticbeanstalk\/set-ulimit.sh": {
                                "mode": "000755",
                                "owner": "root",
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "#!\/bin\/bash -xe",
                                            "\n",
                                            "",
                                            "\n",
                                            "# System imposed global limit",
                                            "\n",
                                            "FILES_MAX=$(cat \/proc\/sys\/fs\/file-max)",
                                            "\n",
                                            "",
                                            "\n",
                                            "if [[ ! $FILES_MAX =~ ^[0-9]+$ ]]; then",
                                            "\n",
                                            "    echo WARNING: Unable to determine file max for this system",
                                            "\n",
                                            "    exit 0",
                                            "\n",
                                            "fi",
                                            "\n",
                                            "",
                                            "\n",
                                            "# Per user limit",
                                            "\n",
                                            "let \"USER_LIMIT=$FILES_MAX\/3\"",
                                            "\n",
                                            "",
                                            "\n",
                                            "if [ $USER_LIMIT -lt 4096 ]; then",
                                            "\n",
                                            "    USER_LIMIT=4096",
                                            "\n",
                                            "fi",
                                            "\n",
                                            "",
                                            "\n",
                                            "if [ $USER_LIMIT -gt 200000 ]; then",
                                            "\n",
                                            "    USER_LIMIT=200000",
                                            "\n",
                                            "fi",
                                            "\n",
                                            "",
                                            "\n",
                                            "ulimit -n $USER_LIMIT",
                                            "\n"
                                        ]
                                    ]
                                },
                                "group": "root"
                            }
                        },
                        "commands": {
                            "00removebackup": {
                                "command": "rm -f \/etc\/elasticbeanstalk\/set-ulimit.sh.bak*"
                            }
                        }
                    }
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "DependsOn": "AWSEBBeanstalkMetadata",
            "Properties": {
                "LoadBalancerNames": [{
                    "Ref": "AWSEBLoadBalancer"
                }],
                "MinSize": "1",
                "LaunchConfigurationName": {
                    "Ref": "AWSEBAutoScalingLaunchConfiguration"
                },
                "AvailabilityZones": [
                    "us-east-1e",
                    "us-east-1b",
                    "us-east-1c"
                ],
                "Cooldown": "360",
                "MaxSize": "4",
                "Tags": [{
                        "Value": {
                            "Ref": "AWSEBEnvironmentName"
                        },
                        "Key": "elasticbeanstalk:environment-name",
                        "PropagateAtLaunch": true
                    },
                    {
                        "Value": {
                            "Ref": "AWSEBEnvironmentName"
                        },
                        "Key": "Name",
                        "PropagateAtLaunch": true
                    },
                    {
                        "Value": {
                            "Ref": "AWSEBEnvironmentId"
                        },
                        "Key": "elasticbeanstalk:environment-id",
                        "PropagateAtLaunch": true
                    }
                ]
            }
        },
        "AWSEBInstanceLaunchWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "AWSEBAutoScalingGroup",
            "Properties": {
                "Timeout": "900",
                "Count": "1",
                "Handle": {
                    "Ref": "AWSEBInstanceLaunchWaitHandle"
                }
            }
        },
        "AWSEBAutoScalingScaleUpPolicy": {
            "Properties": {
                "ScalingAdjustment": "1",
                "AutoScalingGroupName": {
                    "Ref": "AWSEBAutoScalingGroup"
                },
                "AdjustmentType": "ChangeInCapacity"
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "AWSEBUpdateWaitConditionHandleCtwCgs": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "AWSEBCloudwatchAlarmHigh": {
            "Properties": {
                "AlarmActions": [{
                    "Ref": "AWSEBAutoScalingScaleUpPolicy"
                }],
                "MetricName": "NetworkOut",
                "ComparisonOperator": "GreaterThanThreshold",
                "Statistic": "Average",
                "AlarmDescription": "ElasticBeanstalk Default Scale Up alarm",
                "Period": "300",
                "Dimensions": [{
                    "Value": {
                        "Ref": "AWSEBAutoScalingGroup"
                    },
                    "Name": "AutoScalingGroupName"
                }],
                "EvaluationPeriods": "1",
                "Namespace": "AWS\/EC2",
                "Threshold": "6000000"
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "AWSEBUpdateWaitConditionCtwCgs": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": [
                "AWSEBSecurityGroup",
                "AWSEBAutoScalingScaleDownPolicy",
                "AWSEBInstanceLaunchWaitHandle",
                "AWSEBAutoScalingGroup",
                "AWSEBSecurityGroupSSHIngress",
                "AWSEBInstanceLaunchWaitCondition",
                "AWSEBAutoScalingLaunchConfiguration",
                "AWSEBAutoScalingScaleUpPolicy",
                "AWSEBCloudwatchAlarmHigh",
                "AWSEBLoadBalancer",
                "AWSEBBeanstalkMetadata",
                "AWSEBCloudwatchAlarmLow"
            ],
            "Properties": {
                "Timeout": "43200",
                "Count": "1",
                "Handle": {
                    "Ref": "AWSEBUpdateWaitConditionHandleCtwCgs"
                }
            }
        },
        "AWSEBBeanstalkMetadata": {
            "Metadata": {
                "AWS::ElasticBeanstalk::Ext": {
                    "Parameters": {
                        "LogPublicationControl": {
                            "Ref": "LogPublicationControl"
                        },
                        "InstancePort": {
                            "Ref": "InstancePort"
                        },
                        "XRayEnabled": {
                            "Ref": "XRayEnabled"
                        },
                        "AWSEBEnvironmentId": {
                            "Ref": "AWSEBEnvironmentId"
                        },
                        "HooksPkgUrl": {
                            "Ref": "HooksPkgUrl"
                        },
                        "AWSEBEnvironmentName": {
                            "Ref": "AWSEBEnvironmentName"
                        },
                        "AWSEBReferrerId": {
                            "Ref": "AWSEBReferrerId"
                        },
                        "AppSource": {
                            "Ref": "AppSource"
                        },
                        "ProxyServer": {
                            "Ref": "ProxyServer"
                        },
                        "NodeVersion": {
                            "Ref": "NodeVersion"
                        },
                        "NodeStaticFiles": {
                            "Ref": "NodeStaticFiles"
                        },
                        "EnvironmentVariables": {
                            "Ref": "EnvironmentVariables"
                        },
                        "AWSEBAgentId": {
                            "Ref": "AWSEBAgentId"
                        },
                        "NodeEnableGzip": {
                            "Ref": "NodeEnableGzip"
                        },
                        "InstanceType": {
                            "Ref": "InstanceType"
                        },
                        "AWSEBEnvironmentBucket": {
                            "Ref": "AWSEBEnvironmentBucket"
                        },
                        "ServerPort": {
                            "Ref": "ServerPort"
                        },
                        "NodeCommand": {
                            "Ref": "NodeCommand"
                        }
                    }
                },
                "AWS::ElasticBeanstalk::Metadata": {
                    "EnvironmentId": "e-bvsmjaz8xv",
                    "Description": "Environment created from the EB CLI using \"eb create\"",
                    "RequestId": "bd91f6a3-454c-11e7-aada-a930efaf10a8",
                    "Version": "bd91f6a3-454c-11e7-aada-a930efaf10a8",
                    "EnvironmentName": "awsmovies",
                    "DateUpdated": "2017-05-30T15:29:16",
                    "DateCreated": "2017-05-28T20:09:12",
                    "DeploymentVersion": 2,
                    "DateLastModified": "2017-05-30T15:29:23",
                    "Name": "e-bvsmjaz8xv"
                }
            },
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "AWSEBCloudwatchAlarmLow": {
            "Properties": {
                "AlarmActions": [{
                    "Ref": "AWSEBAutoScalingScaleDownPolicy"
                }],
                "MetricName": "NetworkOut",
                "ComparisonOperator": "LessThanThreshold",
                "Statistic": "Average",
                "AlarmDescription": "ElasticBeanstalk Default Scale Down alarm",
                "Period": "300",
                "Dimensions": [{
                    "Value": {
                        "Ref": "AWSEBAutoScalingGroup"
                    },
                    "Name": "AutoScalingGroupName"
                }],
                "EvaluationPeriods": "1",
                "Namespace": "AWS\/EC2",
                "Threshold": "2000000"
            },
            "Type": "AWS::CloudWatch::Alarm"
        }
    },
    "Description": "AWS Elastic Beanstalk environment (Name: 'awsmovies'  Id: 'e-bvsmjaz8xv')",
    "Mappings": {
        "AWSEBAWSRegionArch2AMIBase": {
            "ap-south-1": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-52c7b43d"
            },
            "DEVO": {
                "pv": "ami-668f1e70",
                "graphics": "ami-61e27177",
                "gpu": "",
                "hvm": "ami-c58c1dd3"
            },
            "eu-west-2": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-b6daced2"
            },
            "eu-west-1": {
                "pv": "ami-d1c0c4b7",
                "graphics": "ami-2955524f",
                "gpu": "",
                "hvm": "ami-01ccc867"
            },
            "ap-northeast-2": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-9d15c7f3"
            },
            "ap-northeast-1": {
                "pv": "ami-30391657",
                "graphics": "ami-46220c21",
                "gpu": "",
                "hvm": "ami-923d12f5"
            },
            "sa-east-1": {
                "pv": "ami-36cfad5a",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-37cfad5b"
            },
            "ca-central-1": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-0bd66a6f"
            },
            "cn-north-1": {
                "pv": "ami-07e1376a",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-3fe13752"
            },
            "us-gov-west-1": {
                "pv": "ami-27e16546",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-34e76355"
            },
            "ap-southeast-1": {
                "pv": "ami-ab5ce5c8",
                "graphics": "ami-c212aba1",
                "gpu": "",
                "hvm": "ami-fc5ae39f"
            },
            "ap-southeast-2": {
                "pv": "ami-af2128cc",
                "graphics": "ami-0ad2db69",
                "gpu": "",
                "hvm": "ami-162c2575"
            },
            "eu-central-1": {
                "pv": "ami-ba68bad5",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-b968bad6"
            },
            "us-east-1": {
                "pv": "ami-668f1e70",
                "graphics": "ami-61e27177",
                "gpu": "",
                "hvm": "ami-c58c1dd3"
            },
            "us-east-2": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-4191b524"
            },
            "us-west-1": {
                "pv": "ami-0f85a06f",
                "graphics": "ami-4b694d2b",
                "gpu": "",
                "hvm": "ami-7a85a01a"
            },
            "us-west-2": {
                "pv": "ami-c737a5a7",
                "graphics": "ami-60aa3700",
                "gpu": "",
                "hvm": "ami-4836a428"
            }
        },
        "AWSEBOptions": {
            "options": {
                "AWSEBHealthdGroupId": "edd3c567-71d9-46fd-9a94-2269531fea16",
                "NodeDownloadUrl": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/64\/",
                "HaltStartupCommandsOnFailure": "true",
                "SystemType": "enhanced",
                "UserDataScript": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/UserDataScript.sh",
                "LaunchType": "Migration",
                "ebgems": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/beanstalk-core-2.8.gem https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/beanstalk-core-healthd-1.1.gem https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/executor-1.1.gem",
                "tarballs": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/awseb-ruby-2.2.4-x86_64-20160503_1008.tar.gz https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/basehooks.tar.gz",
                "rpms": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_node_js_4.0.1.90.2\/lib\/aws-elasticbeanstalk-tools-1.19-1.noarch.rpm",
                "FastVersionDeployment": "true",
                "ServiceRole": "aws-elasticbeanstalk-service-role",
                "HealthdProxyLogLocation": "",
                "CommandBasedLeaderElection": "true",
                "CloudConfigOptions": "cloud_final_modules:\n - [scripts-user, always]",
                "DefaultsScript": "\/opt\/elasticbeanstalk\/containerfiles\/containerdefaults.py",
                "LeaderTestScript": "\/opt\/elasticbeanstalk\/bin\/leader-test.sh",
                "downloadSourceBundleScriptLocation": [
                    "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/eb_patching_resources\/download_source_bundle.py"
                ],
                "DefaultSSHPort": "22",
                "ProxyServer": "nginx",
                "AWSEBHealthdEndpoint": "",
                "EmbeddedConfigsetsEnabled": "true",
                "EBSNSTopicArn": "",
                "guid": "f08557fc43ac",
                "nodeploymentOnStartup": "true",
                "ebpatchscripturl": [
                    "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/eb_patching_resources\/patch_instance.py"
                ]
            }
        },
        "AWSEBAWSRegionArch2AMI": {
            "ap-south-1": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-52c7b43d"
            },
            "DEVO": {
                "pv": "ami-668f1e70",
                "graphics": "ami-61e27177",
                "gpu": "",
                "hvm": "ami-c58c1dd3"
            },
            "eu-west-2": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-b6daced2"
            },
            "eu-west-1": {
                "pv": "ami-d1c0c4b7",
                "graphics": "ami-2955524f",
                "gpu": "",
                "hvm": "ami-01ccc867"
            },
            "ap-northeast-2": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-9d15c7f3"
            },
            "ap-northeast-1": {
                "pv": "ami-30391657",
                "graphics": "ami-46220c21",
                "gpu": "",
                "hvm": "ami-923d12f5"
            },
            "sa-east-1": {
                "pv": "ami-36cfad5a",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-37cfad5b"
            },
            "ca-central-1": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-0bd66a6f"
            },
            "cn-north-1": {
                "pv": "ami-07e1376a",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-3fe13752"
            },
            "us-gov-west-1": {
                "pv": "ami-27e16546",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-34e76355"
            },
            "ap-southeast-1": {
                "pv": "ami-ab5ce5c8",
                "graphics": "ami-c212aba1",
                "gpu": "",
                "hvm": "ami-fc5ae39f"
            },
            "ap-southeast-2": {
                "pv": "ami-af2128cc",
                "graphics": "ami-0ad2db69",
                "gpu": "",
                "hvm": "ami-162c2575"
            },
            "eu-central-1": {
                "pv": "ami-ba68bad5",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-b968bad6"
            },
            "us-east-1": {
                "pv": "ami-d8acd0ce",
                "graphics": "ami-61e27177",
                "gpu": "",
                "hvm": "ami-60b3cf76"
            },
            "us-east-2": {
                "pv": "",
                "graphics": "",
                "gpu": "",
                "hvm": "ami-4191b524"
            },
            "us-west-1": {
                "pv": "ami-0f85a06f",
                "graphics": "ami-4b694d2b",
                "gpu": "",
                "hvm": "ami-7a85a01a"
            },
            "us-west-2": {
                "pv": "ami-c737a5a7",
                "graphics": "ami-60aa3700",
                "gpu": "",
                "hvm": "ami-4836a428"
            }
        },
        "AWSEBAWSInstanceType2Arch": {
            "r3.8xlarge": {
                "Arch": "hvm"
            },
            "t2.nano": {
                "Arch": "hvm"
            },
            "m3.xlarge": {
                "Arch": "pv"
            },
            "m4.10xlarge": {
                "Arch": "hvm"
            },
            "r4.16xlarge": {
                "Arch": "hvm"
            },
            "m1.small": {
                "Arch": "pv"
            },
            "m1.xlarge": {
                "Arch": "pv"
            },
            "m2.xlarge": {
                "Arch": "pv"
            },
            "m4.xlarge": {
                "Arch": "hvm"
            },
            "i3.8xlarge": {
                "Arch": "hvm"
            },
            "g2.2xlarge": {
                "Arch": "graphics"
            },
            "m4.2xlarge": {
                "Arch": "hvm"
            },
            "c3.4xlarge": {
                "Arch": "hvm"
            },
            "i3.4xlarge": {
                "Arch": "hvm"
            },
            "t2.large": {
                "Arch": "hvm"
            },
            "p2.16xlarge": {
                "Arch": "hvm"
            },
            "c1.medium": {
                "Arch": "pv"
            },
            "c4.2xlarge": {
                "Arch": "hvm"
            },
            "m2.2xlarge": {
                "Arch": "pv"
            },
            "hi1.4xlarge": {
                "Arch": "pv"
            },
            "d2.xlarge": {
                "Arch": "hvm"
            },
            "t1.micro": {
                "Arch": "pv"
            },
            "g2.8xlarge": {
                "Arch": "graphics"
            },
            "d2.8xlarge": {
                "Arch": "hvm"
            },
            "x1.16xlarge": {
                "Arch": "hvm"
            },
            "m1.large": {
                "Arch": "pv"
            },
            "r3.2xlarge": {
                "Arch": "hvm"
            },
            "f1.16xlarge": {
                "Arch": "hvm"
            },
            "t2.micro": {
                "Arch": "hvm"
            },
            "hs1.8xlarge": {
                "Arch": "pv"
            },
            "m2.4xlarge": {
                "Arch": "pv"
            },
            "x1.32xlarge": {
                "Arch": "hvm"
            },
            "r4.4xlarge": {
                "Arch": "hvm"
            },
            "t2.2xlarge": {
                "Arch": "hvm"
            },
            "cc2.8xlarge": {
                "Arch": "hvm"
            },
            "t2.xlarge": {
                "Arch": "hvm"
            },
            "d2.2xlarge": {
                "Arch": "hvm"
            },
            "m4.large": {
                "Arch": "hvm"
            },
            "i2.xlarge": {
                "Arch": "hvm"
            },
            "m4.4xlarge": {
                "Arch": "hvm"
            },
            "c4.8xlarge": {
                "Arch": "hvm"
            },
            "f1.2xlarge": {
                "Arch": "hvm"
            },
            "t2.medium": {
                "Arch": "hvm"
            },
            "i2.2xlarge": {
                "Arch": "hvm"
            },
            "p2.xlarge": {
                "Arch": "hvm"
            },
            "i2.8xlarge": {
                "Arch": "hvm"
            },
            "c4.large": {
                "Arch": "hvm"
            },
            "r3.xlarge": {
                "Arch": "hvm"
            },
            "cc1.4xlarge": {
                "Arch": "hvm"
            },
            "r3.large": {
                "Arch": "hvm"
            },
            "t2.small": {
                "Arch": "hvm"
            },
            "r4.xlarge": {
                "Arch": "hvm"
            },
            "c4.4xlarge": {
                "Arch": "hvm"
            },
            "m3.2xlarge": {
                "Arch": "pv"
            },
            "c1.xlarge": {
                "Arch": "pv"
            },
            "c3.xlarge": {
                "Arch": "hvm"
            },
            "c4.xlarge": {
                "Arch": "hvm"
            },
            "cr1.8xlarge": {
                "Arch": "hvm"
            },
            "r4.8xlarge": {
                "Arch": "hvm"
            },
            "i3.large": {
                "Arch": "hvm"
            },
            "cg1.4xlarge": {
                "Arch": "hvm"
            },
            "m3.medium": {
                "Arch": "pv"
            },
            "r4.2xlarge": {
                "Arch": "hvm"
            },
            "m1.medium": {
                "Arch": "pv"
            },
            "i3.2xlarge": {
                "Arch": "hvm"
            },
            "i3.16xlarge": {
                "Arch": "hvm"
            },
            "r4.large": {
                "Arch": "hvm"
            },
            "m4.16xlarge": {
                "Arch": "hvm"
            },
            "c3.2xlarge": {
                "Arch": "hvm"
            },
            "c3.large": {
                "Arch": "hvm"
            },
            "i2.4xlarge": {
                "Arch": "hvm"
            },
            "m3.large": {
                "Arch": "pv"
            },
            "i3.xlarge": {
                "Arch": "hvm"
            },
            "p2.8xlarge": {
                "Arch": "hvm"
            },
            "d2.4xlarge": {
                "Arch": "hvm"
            },
            "c3.8xlarge": {
                "Arch": "hvm"
            },
            "r3.4xlarge": {
                "Arch": "hvm"
            }
        },
        "EnvironmentInfoTasks": {
            "systemtail": {
                "LocationPrefix": "resources\/environments\/logs\/systemtail\/",
                "AutoClean": "true",
                "CommandName": "CMD-SystemTailLogs"
            },
            "tail": {
                "LocationPrefix": "resources\/environments\/logs\/tail\/",
                "AutoClean": "true",
                "CommandName": "CMD-TailLogs"
            },
            "publish": {
                "LocationPrefix": "resources\/environments\/logs\/publish\/"
            },
            "bundle": {
                "LocationPrefix": "resources\/environments\/logs\/bundle\/",
                "AutoClean": "true",
                "CommandName": "CMD-BundleLogs"
            }
        },
        "XRay": {
            "Configuration": {
                "Version": "v1.0"
            }
        },
        "ContainerMeta": {
            "AMIMeta": {
                "RepoReleaseVersion": "2017.03",
                "AMIVersion": "2017.03.0"
            }
        }
    }
}